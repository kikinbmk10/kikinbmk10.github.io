{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/Services/weather.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/index/index.component.ts","./src/app/pages/index/index.component.html","./src/app/pages/pages.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Ciudad } from '../Models/Ciudades';\nimport { Weather } from '../Models/Weather';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  public listCiudades: Ciudad[] = [\n    {\n      Name: \"Cancún\",\n      NameValue:\"Canc%C3%BAn\"\n    },\n    {\n      Name: \"Guadalajara\",\n      NameValue:\"guadalajara\"\n    },\n    {\n      Name: \"Hermosillo\",\n      NameValue:\"hermosillo\"\n    },\n    {\n      Name: \"Irapuato\",\n      NameValue:\"irapuato\"\n    },\n    {\n      Name: \"Mazatlán\",\n      NameValue:\"Mazatl%C3%A1n\"\n    },\n    {\n      Name: \"Mérida\",\n      NameValue:\"M%C3%A9rida\"\n    },\n    {\n      Name: \"Mexicali\",\n      NameValue:\"mexicali\"\n    },\n    {\n      Name: \"Monterrey\",\n      NameValue:\"monterrey\"\n    },\n    {\n      Name: \"Puerto Vallarta\",\n      NameValue:\"puerto%20vallarta\"\n    },\n    {\n      Name: \"Saltillo\",\n      NameValue:\"saltillo\"\n    },\n    {\n      Name: \"Tijuana\",\n      NameValue:\"tijuana\"\n    }\n  ];\n\n  constructor(private _http: HttpClient) { }\n\n  public getWeatherData(ciudad:string, lang: string): Observable<any> {\n    return this._http.get<Weather>(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${ciudad}/next7days?unitGroup=metric&elements=datetime%2Ctempmax%2Ctempmin%2Ctemp%2Chumidity%2Cprecip%2Cprecipprob%2Cwindspeed%2Cconditions%2Cicon&include=days&key=59A7RJPTJUTLR79VAU6QD6YQH&lang=${lang}&contentType=json`);\n  }\n\n  public getCiudades() {\n    return this.listCiudades;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// pages\nimport { IndexComponent } from './pages/index/index.component';\nconst routes: Routes = [\n  { path: \"\", component: IndexComponent },\n  { path: '**', pathMatch: 'full', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weather-project';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Pages module\nimport { PagesModule } from './pages/pages.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    PagesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n// Importing classes and services\nimport { WeatherService } from '../../Services/weather.service';\nimport { Ciudad } from '../../Models/Ciudades';\nimport { Weather, ConsultW } from '../../Models/Weather';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  public spanish = true; // Language variable\n  public listCities: Ciudad[]; // City list of city Class\n  public dataWeather: Weather; // Data of weather\n  public cityForm: FormGroup; // Form of select city\n  public mapWeather = new Map<string,ConsultW>(); // Dictionary to save data\n  public dateCurrrent: number; // number of miliseconds to compare the date\n \n  constructor(\n    public translate: TranslateService,\n    public _servWeather: WeatherService\n  ) {\n    translate.addLangs(['es', 'en']); // languages\n    translate.setDefaultLang('es');  // Select spanish as main language\n    this.cityForm = new FormGroup ({  // Build the form\n      'dropdownCity': new FormControl('', Validators.required)\n    });\n  } \n\n  ngOnInit(): void {\n \n    if(localStorage.length == 0) { // initialize the localstorage\n      localStorage.mapW = JSON.stringify(Array.from(this.mapWeather.entries()));\n    }\n    this.mapWeather = new Map(JSON.parse(localStorage.mapW)); // Assign the local storage to the variable\n    this.fillCities(); // fill list of cities  \n  }\n\n\n  // Function to fill data\n  fillCities() {\n    this.listCities = this._servWeather.getCiudades(); // we call the service to bring the list of citys\n  }\n\n  fillWeather(city, lang) {\n    // console.log(this.mapWeather.get(city+lang).ConsultTime);\n    let dateCompar = new Date();\n    if (!this.mapWeather.has(city+lang)) { // check if we have the data before making a request to the API\n      this._servWeather.getWeatherData(city,lang).subscribe(  // we bring the data of the API\n        data => {\n          let date = new Date();\n          this.dateCurrrent = date.getTime();\n          this.dataWeather = data;  // assign the data to a variable\n          let consult: ConsultW =  {  // create the object\n            ValueCity: this.dataWeather,\n            ConsultTime: this.dateCurrrent\n          };\n          this.mapWeather.set(city+lang, consult); // add the data to the Map\n          localStorage.mapW = JSON.stringify(Array.from(this.mapWeather.entries())); // save in localStorage\n        },\n        err => {\n          console.log(err);\n        }\n      );     \n    } else if ((this.mapWeather.get(city+lang).ConsultTime + 600000) < dateCompar.getTime()){ // if time past at least 10 minutes you can get a new value\n      this._servWeather.getWeatherData(city,lang).subscribe(  // we bring the data of the API\n        data => {\n          let date = new Date();\n          this.dateCurrrent = date.getTime();\n          this.dataWeather = data;  // assign the data to a variable\n          let consult: ConsultW =  { // create the object\n            ValueCity: this.dataWeather,\n            ConsultTime: this.dateCurrrent\n          };\n          this.mapWeather.delete(city+lang) // delete the previous record\n          this.mapWeather.set(city+lang, consult); // add the new data to the Map\n          localStorage.mapW = JSON.stringify(Array.from(this.mapWeather.entries())); // save in localStorage\n        },\n        err => {\n          console.log(err);\n        }\n      );  \n    } else {\n      this.dataWeather = this.mapWeather.get(city+lang).ValueCity;  // assign the vaule of the Map to the variable\n    }\n\n\n  }\n\n  bringWeather() {  // When the Select change this function is executed\n    let cityValue = this.cityForm.controls[\"dropdownCity\"].value;  // Obtain the vaule\n    let lang = this.translate.currentLang  // obtain the lang value\n    if (lang == undefined || lang == null) {\n      lang = \"es\";\n    }\n    this.fillWeather(cityValue, lang);  // call the function\n  }\n\n  \n  // Function to change language\n  useLanguage(lg: string) {\n    let cityValue = this.cityForm.controls[\"dropdownCity\"].value; // obtain de select Value\n    this.translate.use(lg); // Change the language\n    if (lg == 'es') {\n      this.spanish = true;\n    } else {\n      this.spanish = false; \n    }\n\n    if (cityValue != \"\" && cityValue != undefined && cityValue != null) {\n      this.fillWeather(cityValue, lg); \n    }\n  }\n\n}\n","<header>\r\n    <div class=\"header-container\">\r\n        <h1>{{ 'Index.h1Title' | translate }}</h1>\r\n        <div class=\"languages\">\r\n            <a [class.idiomSelect]=\"spanish\" (click)=\"useLanguage('es')\" >ES</a>&nbsp;|&nbsp;\r\n            <a [class.idiomSelect]=\"!spanish\" (click)=\"useLanguage('en')\">EN</a> \r\n        </div>\r\n    </div>\r\n</header>\r\n<section>\r\n    <div class=\"main-content\">\r\n        <form [formGroup]=\"cityForm\" novalidate=\"novalidate\">\r\n            <label for=\"dropdownCity\">{{ 'Index.labelCity' | translate }}</label>\r\n            <select formControlName=\"dropdownCity\" (change)=\"bringWeather()\">\r\n                <option *ngFor=\"let city of listCities\" [ngValue]=\"city.NameValue\">{{ city.Name }}</option>\r\n            </select>\r\n        </form>\r\n        <div *ngIf=\"dataWeather\" class=\"weather-section\">\r\n            <p class=\"w-s-city\">{{ dataWeather.resolvedAddress }}</p>\r\n            <div class=\"w-s-weather\">\r\n                <div class=\"img-content\">\r\n                    <img src=\"assets/icons/{{ dataWeather.days[0].icon}}.png\" alt=\"\">\r\n                    <p>{{ dataWeather.days[0].conditions}}</p>\r\n                </div>\r\n                <p class=\"w-s-temp\">{{ dataWeather.days[0].temp}}°c</p>\r\n                <div class=\"w-s-others\">\r\n                    <p class=\"wind\">{{ 'Index.labelWind' | translate }}: {{ dataWeather.days[0].windspeed }} km/h</p>\r\n                    <p class=\"precip\">{{ 'Index.labelPrecip' | translate }}: {{ dataWeather.days[0].precipprob}}%</p>\r\n                    <p class=\"humidity\">{{ 'Index.labelHumidity' | translate }}: {{ dataWeather.days[0].humidity}} %</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"w-s-next\">\r\n                <div class=\"next-w-i\" *ngFor=\"let item of dataWeather.days; index as i\">\r\n                    <img src=\"assets/icons/{{ item.icon}}.png\" alt=\"\">\r\n                    <div>\r\n                        <p>{{ 'Index.labelDate' | translate }}: {{ item.datetime }}</p>\r\n                        <p>Temp max: {{ item.tempmax}}</p>\r\n                        <p>Temp min: {{ item.tempmin}}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Component\nimport { IndexComponent } from './index/index.component';\n\n// Module y Loaders para traducciones\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient } from '@angular/common/http';\n// AoT requires an exported function for factories (Funcion para mandar llamar al archivo del lenguaje)\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    IndexComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient]\n      }\n    }),\n  ]\n})\nexport class PagesModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}